worker_processes auto;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    upstream minio:9000 {
        server minio:9000;
    }

    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    server {
        listen 80;

        # Configuração para o Frontend
        location / {
            proxy_pass http://frontend:3000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Configuração para o API Gateway
        location /api-gateway/ {
            rewrite ^/api-gateway/(.*)$ /$1 break;
            proxy_pass http://api_gateway:8000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

           # Adicionando cabeçalhos CORS
           add_header 'Access-Control-Allow-Origin' '*' always;
           add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
           add_header 'Access-Control-Allow-Headers' 'Origin, Content-Type, Accept, Authorization' always;

            # Reescreve os caminhos para suportar o subpath
            sub_filter 'href="/' 'href="/api-gateway/';
            sub_filter 'src="/' 'src="/api-gateway/';
            sub_filter_once off;

           # Tratando requisições OPTIONS (preflight)
           if ($request_method = 'OPTIONS') {
             add_header 'Access-Control-Allow-Origin' '*';
             add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS';
             add_header 'Access-Control-Allow-Headers' 'Origin, Content-Type, Accept, Authorization';
             add_header 'Access-Control-Max-Age' 3600;
             return 204;
           }

        }

        # Configuração para o WebSocket Gateway
        location /socket.io {
            proxy_pass http://ws_gateway:4000;
    
            # Configurações necessárias para WebSocket
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";

            # Timeout para conexões WebSocket
            proxy_connect_timeout 3600s;
            proxy_read_timeout 3600s;
            proxy_send_timeout 3600s;

            # Cabeçalhos adicionais
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Configuração para o serviço principal do MinIO
        location /minio/ {
            proxy_pass http://minio:9000/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;


            proxy_http_version 1.1;
            proxy_set_header Connection "";
            chunked_transfer_encoding off;

            # Reescreve os caminhos para suportar o subpath
            # sub_filter 'href="/' 'href="/minio/';
            # sub_filter 'src="/' 'src="/minio/';
            # sub_filter_once off;
        }

        # Configuração para o console do MinIO
        location /minio-console/ {
            rewrite ^/minio-console/(.*) /$1 break;
            proxy_pass http://minio:9090/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";

            chunked_transfer_encoding off;

            # Reescreve os caminhos para suportar o subpath
            sub_filter 'href="/' 'href="/minio-console/';
            sub_filter 'src="/' 'src="/minio-console/';
            sub_filter_once off;
        }

        # Kibana (porta 5601)
        location /kibana-service/ {
            proxy_pass http://kibana:5601/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Reescreve os caminhos para suportar o subpath
            sub_filter 'href="/' 'href="/kibana-service/';
            sub_filter 'src="/' 'src="/kibana-service/';
            sub_filter_once off;
        }

  	      # Elasticsearch (porta 9200)
        location /elasticsearch/ {
            proxy_pass http://elasticsearch:9200/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Reescreve os caminhos para suportar o subpath
            sub_filter 'href="/' 'href="/elasticsearch/';
            sub_filter 'src="/' 'src="/elasticsearch/';
            sub_filter_once off;
        }

        # Logstash (porta 12201, interface HTTP)
        location /logstash/ {
            proxy_pass http://logstash:12201/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Reescreve os caminhos para suportar o subpath
            sub_filter 'href="/' 'href="/logstash/';
            sub_filter 'src="/' 'src="/logstash/';
            sub_filter_once off;
        }
    }
}
